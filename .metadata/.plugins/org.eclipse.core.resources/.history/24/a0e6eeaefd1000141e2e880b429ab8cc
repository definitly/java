
public class GetDistance {
	
	
	private double lat1;
	private double lon1;
	
	private double lat2;
	private double lon2;
	double rad=6372795;
	double d=2555;
	
	
    
	
	
	
	
	
	
	public double getLat1() {
		return lat1;
	}
	public void setLat1(double lat1){
		this.lat1= lat1;
	}
	public double getLon1() {
		return lon1;
	}
	public void setLon1(double lon1){
		this.lon1= lon1;
	}
	public double getLon2() {
		return lon2;
	}
	public void setLon2(double lon2) {
		this.lon2 = lon2;
	}
	public  double getLat2() {
		return lat2;
	}
	public void setLat2(double lat2) {
		this.lat2 = lat2;
	}
	


    //вычесление длины большого круга 
   
    
    public double getDist() {
    
    	double rlat2=Math.toRadians(lat2);	
        double rlat1=Math.toRadians(lat1);
        double rlon1=Math.toRadians(lon1);
        double rlon2=Math.toRadians(lon2);
      
        
       
        
    
	   
	   
	   return    (int) ( (Math.atan2(Math.sqrt(Math.pow(Math.cos(rlat2)*Math.sin(rlon2-rlon1),2)+
               Math.pow(Math.cos(rlat1)* Math.sin(rlat2)-Math.sin(rlat1)*Math.cos(rlat2)*Math.cos(rlon2-rlon1),2)),
               Math.sin(rlat1)*Math.sin(rlat2)+Math.cos(rlat1)*Math.cos(rlat2)*Math.cos(rlon2-rlon1))*rad)/1000); //в км
	   
       
    }
    
  
    public double getAzimut () {
		 
    	double rlat2=Math.toRadians(lat2);	
        double rlat1=Math.toRadians(lat1);
        double rlon1=Math.toRadians(lon1);
        double rlon2=Math.toRadians(lon2);
       
	
 
   return      Math.atan2(Math.sin(rlon2-rlon1)*Math.cos(rlat2),
        			                Math.cos(rlat1)*Math.sin(rlat2) - Math.sin(rlat1)*Math.cos(rlat2)*Math.cos(rlon2-rlon1)
        			            ) * 180/Math.PI;
        		        

    }
 
	 
	   
	

	 
 public double DesPoint ()
 
 {
	 double rlat2=getLat2()*Math.PI/180;	
     double rlat1=getLat1()*Math.PI/180;
     double rlon1=getLon1()*Math.PI/180;
     double rlon2=getLon2()*Math.PI/180;	 
     double despoint;
     
     
     return despoint;

 }
	 
 
}
	
	
	
	


